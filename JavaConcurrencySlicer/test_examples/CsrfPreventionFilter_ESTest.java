/*
 * This file was automatically generated by EvoSuite
 * Tue Jan 17 14:00:56 GMT 2017
 */

package org.apache.catalina.filters;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import javax.servlet.http.HttpServletResponse;
import org.apache.catalina.filters.CsrfPreventionFilter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, useJEE = true) 
public class CsrfPreventionFilter_ESTest extends CsrfPreventionFilter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CsrfPreventionFilter.LruCache<Object> csrfPreventionFilter_LruCache0 = new CsrfPreventionFilter.LruCache<Object>(0);
      CsrfPreventionFilter.LruCache<String> csrfPreventionFilter_LruCache1 = new CsrfPreventionFilter.LruCache<String>(0);
      boolean boolean0 = csrfPreventionFilter_LruCache0.contains(csrfPreventionFilter_LruCache1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CsrfPreventionFilter csrfPreventionFilter0 = new CsrfPreventionFilter();
      csrfPreventionFilter0.setEntryPoints("4L,=*uy");
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(httpServletResponse0).encodeURL(anyString());
      CsrfPreventionFilter.CsrfResponseWrapper csrfPreventionFilter_CsrfResponseWrapper0 = new CsrfPreventionFilter.CsrfResponseWrapper(httpServletResponse0, "~;JN");
      String string0 = csrfPreventionFilter_CsrfResponseWrapper0.encodeURL((String) null);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(httpServletResponse0).encodeRedirectURL(anyString());
      CsrfPreventionFilter.CsrfResponseWrapper csrfPreventionFilter_CsrfResponseWrapper0 = new CsrfPreventionFilter.CsrfResponseWrapper(httpServletResponse0, "~;JN");
      String string0 = csrfPreventionFilter_CsrfResponseWrapper0.encodeRedirectURL("69");
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CsrfPreventionFilter csrfPreventionFilter0 = new CsrfPreventionFilter();
      csrfPreventionFilter0.setNonceCacheSize((-938));
      csrfPreventionFilter0.setNonceCacheSize(240);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CsrfPreventionFilter.LruCache<Object> csrfPreventionFilter_LruCache0 = new CsrfPreventionFilter.LruCache<Object>(0);
      HttpServletResponse httpServletResponse0 = mock(HttpServletResponse.class, new ViolatedAssumptionAnswer());
      CsrfPreventionFilter.CsrfResponseWrapper csrfPreventionFilter_CsrfResponseWrapper0 = new CsrfPreventionFilter.CsrfResponseWrapper(httpServletResponse0, "~;JN");
      csrfPreventionFilter_LruCache0.add(csrfPreventionFilter_CsrfResponseWrapper0);
  }
}
